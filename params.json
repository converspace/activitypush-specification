{"note":"Don't delete this file! It's used internally to help with page regeneration.","body":"A lightweight method for URI addressable resource owners to request and receive unsolicited ([JSON Activity Streams](http://activitystrea.ms/specs/json/1.0/) based)  notifications about remote (off-site) activities on their resources with an explicit goal of being easy to implement.\r\n\r\n\r\n## Discovery\r\n\r\n```\r\n> GET /referenced-resource HTTP/1.1\r\n> Host: notification.receiver\r\n\r\n\r\n< HTTP/1.1 200 OK\r\n< Link: <http://notification.receiver/activity-pingback-endpoint>; rel=\"http://activitypingback.org/\"\r\n```\r\n\r\n\r\n\r\n\r\n## Notification\r\n\r\n```\r\n> POST /activity-pingback-endpoint HTTP/1.1\r\n> Host: notification.receiver\r\n> Activity-Pingback: from=\"http://notification.sender/activity-pingback-endpoint\",\r\n>                    timestamp=\"1336363200\",\r\n>                    nonce=\"dj83hs9s\",\r\n>                    payload_hash='1f3870be274f6c49b3e31a0c6728957f',\r\n>                    request_hmac=\"bhCQXTVyfj5cmA9uKkPFx1zeOXM=\"\r\n>\r\n> {JSON Activity Streams Payload}\r\n\r\n\r\n< HTTP/1.1 202 Accepted\r\n```\r\n`payload_hash` is the MD5 hash of the `JSON Activity Streams Payload`. `request_hmac` is the [HMAC](http://en.wikipedia.org/wiki/HMAC) over (`http://notification.receiver/activity-pingback-endpoint` + `timestamp` + `nounce` + `payload_hash`) using an `algo` of its choice and its `secret` as key.\r\n\r\n\r\n## Verification\r\n\r\n```\r\n> POST /activity-pingback-endpoint HTTP/1.1\r\n> Host: notification.sender\r\n> Content-Type: application/x-www-url-form-encoded\r\n>\r\n> to=http://notification.receiver/activity-pingback-endpoint&\\\r\n> timestamp=1336363200&\\\r\n> nonce=dj83hs9s&\\\r\n> payload_hash=1f3870be274f6c49b3e31a0c6728957f&\\\r\n> request_hmac=bhCQXTVyfj5cmA9uKkPFx1zeOXM=\r\n\r\n\r\n\r\n< HTTP/1.1 200 OK\r\n```\r\n\r\n`notification.sender` compares the received `request_hmac` against the one calculated over the received (`to` + `timestamp` + `nouce` + `payload_hash`) using the `algo` and `secret` it uses while sending notifications.\r\n\r\n\r\n## Security and Spam\r\n\r\n\r\n### Questions receivers should be able to reliably answer:\r\n\r\n1. Did __you__ (the sender mentioned in the request) send __this activity__  to __me__?\r\n * The `verification` step should answer the __you__ part. Calculating the `request_hmac` over the `payload_hash` should answer the __this activity__ part. Calculating the `request_hmac` over `to` should answer the __me__ part.\r\n2. Is __this activity__ about __my resource__?\r\n  * Checking the _object_ in the activity should answer this.\r\n3. How do I know if I'm actually talking with the intended sender?\r\n  * Given the _unsolicited nature of the notification_, an `HTTPS` activity pingback endpoint by the __sender__ might be the only answer.\r\n4. Is this activity relevant to the conversation or just spam?\r\n  * __Moderation of first time senders__ and then _whitelisting/backlisting_ them should help. Given the use case, the frequency of this might be similar to accepting friend requests.\r\n\r\n### Questions senders should be able to reliably answer:\r\n* How do I know my notification is actually reaching the intended receiver?\r\n * Given the _unsolicited nature of the notification_, an `HTTPS` activity pingback endpoint by the __receiver__ might be the only answer.\r\n* Can someone else send this message on my behalf without me knowing about it?\r\n * Calculating the `request_hmac` over a `timestamp` and `nounce` should prevent this.\r\n\r\n## TODO\r\n\r\n* Consider using [Dialback Authentication](http://tools.ietf.org/html/draft-prodromou-dialback-00) if [evanp/dialback#2](https://github.com/evanp/dialback/issues/2) is fixed.\r\n* Currently the notification process is asynchronous. Consider making it synchronous?\r\n\r\n\r\n## See also\r\n\r\n* [Pingback](http://www.hixie.ch/specs/pingback/pingback)\r\n* [Trackback](http://archive.cweiske.de/trackback/trackback-1.2.html)\r\n* [RESTful](http://bblfish.net/tmp/2011/05/09/) [Pings](http://www.w3.org/community/rww/wiki/Pingback)\r\n* [Salmon Protocol](http://salmon-protocol.googlecode.com/svn/trunk/draft-panzer-salmon-00.html)\r\n* [Dialback Authentication](http://tools.ietf.org/html/draft-prodromou-dialback-00)\r\n* [PubSubHubbub](https://code.google.com/p/pubsubhubbub/)\r\n* [Activity Streams](http://activitystrea.ms/)\r\n","name":"Activity Pingback Specification","google":"","tagline":""}